{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://localhost:7037';\nexport const getEvents = async () => {\n  const response = await axios.get(`${API_URL}/api/Events`);\n  return response.data;\n};\nexport const getEventById = async id => {\n  const response = await axios.get(`${API_URL}/api/Events/${id}`);\n  return response.data;\n};\nexport const rsvpEvent = async eventId => {\n  const token = localStorage.getItem('token');\n  await axios.post(`${API_URL}/api/Events/${eventId}/rsvp`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const loginUser = async (email, password) => {\n  const response = await axios.post(`${API_URL}/api/Users/login`, {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const registerUser = async (name, email, password, isAdmin) => {\n  console.log('api isAdmin:', isAdmin);\n  const endpoint = isAdmin ? '/api/admin/register' : '/api/Users/register';\n  try {\n    const response = await axios.post(`${API_URL}${endpoint}`, {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const createEvent = async eventData => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.post(`${API_URL}/api/Events`, eventData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating event:\", error.response ? error.response.data : error.message);\n    throw error; // Re-throwing to handle errors in the calling function\n  }\n};\nexport const deleteEvent = async eventId => {\n  const token = localStorage.getItem('token');\n  await axios.delete(`${API_URL}/api/Events/${eventId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getEventAttendees = async eventId => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${API_URL}/api/Events/${eventId}/attendees`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport const sendEventReminder = async eventId => {\n  const token = localStorage.getItem('token');\n  const response = await axios.post(`${API_URL}/api/Events/${eventId}/remind`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getEvents","response","get","data","getEventById","id","rsvpEvent","eventId","token","localStorage","getItem","post","headers","Authorization","loginUser","email","password","registerUser","name","isAdmin","console","log","endpoint","error","createEvent","eventData","message","deleteEvent","delete","getEventAttendees","sendEventReminder"],"sources":["D:/event-management-system-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://localhost:7037';\n\nexport const getEvents = async () => {\n  const response = await axios.get(`${API_URL}/api/Events`);\n  return response.data;\n};\n\nexport const getEventById = async (id) => {\n  const response = await axios.get(`${API_URL}/api/Events/${id}`);\n  return response.data;\n};\n\nexport const rsvpEvent = async (eventId) => {\n  const token = localStorage.getItem('token');\n  await axios.post(`${API_URL}/api/Events/${eventId}/rsvp`, {}, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n};\n\nexport const loginUser = async (email, password) => {\n  const response = await axios.post(`${API_URL}/api/Users/login`, { email, password });\n  return response.data;\n};\n\nexport const registerUser = async (name, email, password, isAdmin) => {\n  console.log('api isAdmin:', isAdmin);\n\n  const endpoint = isAdmin ? '/api/admin/register' : '/api/Users/register';\n  try {\n    const response = await axios.post(`${API_URL}${endpoint}`, { name, email, password });\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const createEvent = async (eventData) => {\n  const token = localStorage.getItem('token');\n\n  try {\n    const response = await axios.post(`${API_URL}/api/Events`, eventData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating event:\", error.response ? error.response.data : error.message);\n    throw error; // Re-throwing to handle errors in the calling function\n  }\n};\n\n\nexport const deleteEvent = async (eventId) => {\n  const token = localStorage.getItem('token');\n  await axios.delete(`${API_URL}/api/Events/${eventId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n};\n\nexport const getEventAttendees = async (eventId) => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${API_URL}/api/Events/${eventId}/attendees`, {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n  return response.data;\n};\n\nexport const sendEventReminder = async (eventId) => {\n  const token = localStorage.getItem('token'); \n\n  const response = await axios.post(`${API_URL}/api/Events/${eventId}/remind`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return response.data;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}